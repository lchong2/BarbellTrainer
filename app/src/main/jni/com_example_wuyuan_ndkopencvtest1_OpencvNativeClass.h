/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <android/log.h>

#include <stdio.h>
#include <opencv2/opencv.hpp>
#include <opencv/cv.h>
#include <opencv/highgui.h>

#define  LOG_TAG    "COO"
#define  LOGD(...)  __android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, __VA_ARGS__)
#define  LOGE(...)  __android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__)

using namespace cv;
using namespace std;
/* Header for class com_example_wuyuan_ndkopencvtest1_OpencvNativeClass */

#ifndef _Included_com_example_wuyuan_ndkopencvtest1_OpencvNativeClass
#define _Included_com_example_wuyuan_ndkopencvtest1_OpencvNativeClass
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_example_wuyuan_ndkopencvtest1_OpencvNativeClass
 * Method:    convertGray
 * Signature: (JJ)I
 */

const static int SENSITIVITY_VALUE=50;
const static int BLUR_SIZE = 20;


Mat lower_org_hue_range, upper_org_hue_range;
Mat hsvImg, org_hue_image;

//Mat objTraj;


const int FRAME_WIDTH = 1280;
const int FRAME_HEIGHT = 768;
//max number of objects to be detected in frame
const int MAX_NUM_OBJECTS=50;
//minimum and maximum object area
const int MIN_OBJECT_AREA = 20*20;
const int MAX_OBJECT_AREA = FRAME_HEIGHT*FRAME_WIDTH/1.5;


Mat grayImage1, grayImage2, differenceImage1, thresholdImage;
int toGray(Mat img, Mat& gray);
string intToString(int number);
void searchForMovement(int& x, int& y, Mat& mRgb1, Mat& threshold, Mat& objTraj, Mat& blankImg);
void morphOps(Mat &thresh);
void drawObject(int& x, int& y, Mat &frame, Mat& objTraj);

JNIEXPORT jint JNICALL Java_sdp_barbelltrainer_OpencvNativeClass_MotionDetect
        (JNIEnv *, jclass, jlong mRgb1Adr, jlong thresholdAdr, jlong lineImgAdr, jlong blankImgAdr);

#ifdef __cplusplus
}
#endif
#endif
